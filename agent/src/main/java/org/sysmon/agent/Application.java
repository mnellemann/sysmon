/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.sysmon.agent;

import org.apache.camel.main.Main;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Application {

    private static final Logger log = LoggerFactory.getLogger(Application.class);

    public static void main(String[] args) {

        // use Camels Main class
        Main main = new Main();

        // and add the routes (you can specify multiple classes)
        main.configure().addRoutesBuilder(AgentRouteBuilder.class);

        // now keep the application running until the JVM is terminated (ctrl + c or sigterm)
        try {
            main.run(args);
        } catch(Exception e) {
            System.err.println(e.getMessage());
        }

    }

/*
    public static void main(String[] args) throws InterruptedException {

        // create the plugin manager
        PluginManager pluginManager = new JarPluginManager(); // or "new ZipPluginManager() / new DefaultPluginManager()"

        // start and load all plugins of application
        pluginManager.loadPlugins();
        pluginManager.startPlugins();


        List<MetricExtension> metricExtensions = pluginManager.getExtensions(MetricExtension.class);
        log.info(String.format("Found %d extensions for extension point '%s':", metricExtensions.size(), MetricExtension.class.getName()));
        for (MetricExtension ext : metricExtensions) {
            if(ext.isSupported()) {
                log.info(">>> " + ext.getGreeting());

                // TODO: Setup camel
            }
        }


        AtomicBoolean keepRunning = new AtomicBoolean(true);
        Thread shutdownHook = new Thread(() -> {
            keepRunning.set(false);
            pluginManager.stopPlugins();
            System.out.println("Stopping sysmon, please wait ...");
        });
        Runtime.getRuntime().addShutdownHook(shutdownHook);


    }
 */

}
